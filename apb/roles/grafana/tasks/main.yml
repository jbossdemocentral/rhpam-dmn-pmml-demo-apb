---

#---------------------- Deploy Grafana ----------------------

- name: Deploy Grafana
  shell: oc new-app grafana/grafana -n {{ OCP_PROJECT }}

# Expose Grafana via router
- name: Create route to Grafana
  shell: oc expose svc/grafana -n {{ OCP_PROJECT }}

#---------------------- Set facts ----------------------

- name: Get service account token
  shell: "oc sa get-token prom -n {{ OCP_PROJECT }}"
  register: oc_get_sa_token_output

- name: Set service account token fact
  set_fact:
    prom_sa_token: "{{ oc_get_sa_token_output.stdout }}"

- name: "Get Prometheus Route"
  shell: "oc get route prom -n {{ OCP_PROJECT }} | awk 'FNR > 1 {print $2}'"
  register: oc_get_route_prometheus_output

- name: "Set Prometheus Route fact"
  set_fact:
    prometheus_route: "{{ oc_get_route_prometheus_output.stdout }}"

- name: "Get Grafana Route"
  shell: "oc get route grafana -n {{ OCP_PROJECT }} | awk 'FNR > 1 {print $2}'"
  register: oc_get_route_grafana_output

- name: "Set Grafana Route fact"
  set_fact:
    grafana_route: "{{ oc_get_route_grafana_output.stdout }}"

#---------------------- Configure Prometheus datasource ----------------------

- name: Create Grafana Datasource yaml
  template:
    src: "{{ role_path }}/files/datasources.yaml.orig"
    dest: "{{ role_path }}/files/datasources.yaml"

- name: Create Prometheus DataSources ConfigMap
  shell: oc create configmap grafana-datasources-config-map --from-file={{ role_path }}/files/datasources.yaml

- name: Attach Grafana DataSources ConfigMap to Volume
  shell: "oc patch dc/grafana -p '{\"spec\":{\"template\":{\"spec\":{\"volumes\":[{\"name\": \"volume-grafana-datasources\", \"configMap\": {\"name\": \"grafana-datasources-config-map\", \"defaultMode\": 420}}]}}}}'"

- name: Attach Grafana DataSources Volume
  shell: "oc patch dc/grafana -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\": \"grafana\", \"volumeMounts\":[{\"name\": \"volume-grafana-datasources\",\"mountPath\":\"/etc/grafana/provisioning/datasources\"}]}]}}}}'"

#---------------------- Create Grafana dashboard ----------------------

- name: Create Grafana Dashboards ConfigMap
  shell: oc create configmap grafana-dashboards-config-map --from-file={{ role_path }}/files/local.yaml

- name: Attach Grafana Dashboards ConfigMap to Volume
  shell: "oc patch dc/grafana -p '{\"spec\":{\"template\":{\"spec\":{\"volumes\":[{\"name\": \"volume-grafana-dashboards\", \"configMap\": {\"name\": \"grafana-dashboards-config-map\", \"defaultMode\": 420}}]}}}}'"

- name: Attach Grafana DataSources Volume
  shell: "oc patch dc/grafana -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\": \"grafana\", \"volumeMounts\":[{\"name\": \"volume-grafana-dashboards\",\"mountPath\":\"/etc/grafana/provisioning/dashboards\"}]}]}}}}'"

- name: Create Grafana Demo Dashboard ConfigMap
  shell: oc create configmap grafana-demo-dashboard-config-map --from-file={{ role_path }}/files/demo-dashboard.json

- name: Attach Grafana Demo Dashboard ConfigMap to Volume
  shell: "oc patch dc/grafana -p '{\"spec\":{\"template\":{\"spec\":{\"volumes\":[{\"name\": \"volume-grafana-demo-dashboard\", \"configMap\": {\"name\": \"grafana-demo-dashboard-config-map\", \"defaultMode\": 420}}]}}}}'"

- name: Attach Grafana Demo Dashboard Volume
  shell: "oc patch dc/grafana -p '{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\": \"grafana\", \"volumeMounts\":[{\"name\": \"volume-grafana-demo-dashboard\",\"mountPath\":\"/var/lib/grafana/dashboards\"}]}]}}}}'"

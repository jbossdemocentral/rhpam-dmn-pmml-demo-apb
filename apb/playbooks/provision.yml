- name: rhpam-rhdm-workshopv1-apb playbook to provision the application
  hosts: localhost
  gather_facts: false
  connection: local
  vars:
    openshift_user:
    openshift_password:
    openshift_token:
    openshift_master_url:
    openshift_user_password:
    project_suffix: "-XX"
    github_account: RedHat-Middleware-Workshops
    github_ref: master
    #gogs_dev_user: developer
    #gogs_pwd: openshift
    #gogs_generate_user_format: user%02d
    #gogs_clone_addr_m1: "https://github.com/RedHat-Middleware-Workshops/cloud-native-workshop-v2m1-labs.git"
    #gogs_clone_addr_m2: "https://github.com/RedHat-Middleware-Workshops/cloud-native-workshop-v2m2-labs.git"
    #gogs_clone_addr_m3: "https://github.com/RedHat-Middleware-Workshops/cloud-native-workshop-v2m3-labs.git"
    #gogs_clone_addr_m4: "https://github.com/RedHat-Middleware-Workshops/cloud-native-workshop-v2m4-labs.git"
    #gogs_repo_name: "rhpam-rhdm-workshop-v1-labs"
    #gogs_user_count: 0
    #gogs_user_format: user%d
    #infrasvcs_adm_user: adminuser
    #infrasvcs_adm_pwd: adminpwd
    user_count: 5
    master_url: "kubernetes.default"
    modules: "{{ modules }}"

  roles:
  - role: ansible.kubernetes-modules
    install_python_requirements: no
  - role: ansibleplaybookbundle.asb-modules

  tasks:
  - name: login as super user with token
    shell: "oc login {{ master_url }} --token={{ openshift_token }} --insecure-skip-tls-verify=true"
    when:
      - openshift_token is defined
      - openshift_token is not none
      - openshift_token|trim() != ""
    tags: always

  - name: login as super user with pwd
    shell: "oc login {{ master_url }} -u {{ openshift_user }} -p {{ openshift_password }} --insecure-skip-tls-verify=true"
    when: >
      openshift_token is not defined or
      openshift_token is none or
      openshift_token|trim() == ""
    tags: always

#  - name: extract app route suffix
#    block:
#      - openshift_v1_route:
#          name: dummy
#          namespace: "{{ namespace }}"
#          state: present
#          spec_to_kind: Service
#          spec_to_name: dummy
#          spec_port_target_port: 8080
#        register: dummy_route
#      - set_fact:
#          apps_hostname_suffix: "{{ dummy_route.route.spec.host|regex_replace('^dummy-' + namespace + '\\.(.*)$', '\\1') }}"
#      - openshift_v1_route:
#          name: dummy
#          namespace: "{{ namespace }}"
#          state: absent
#    tags: always

  - name: delete project quota
    shell: "oc delete limitrange --all -n {{ namespace }}"
    ignore_errors: true
    tags: always

#  - name: disable namespace ownership for router
#    shell: "oc set env dc/router --overwrite ROUTER_DISABLE_NAMESPACE_OWNERSHIP_CHECK=true -n default"
#    when:
#      - openshift_token is defined
#      - openshift_token is not none
#      - openshift_token|trim() != ""
#    tags: always

  # install openjdk imagestream
  - name: get openjdk image stream
    shell: "oc get is java -n {{ IMAGE_STREAM_NAMESPACE }}"
    register: java_imagestream_result
    ignore_errors: true
    tags: jdk

  - name: install java image stream
    shell: "oc apply -n {{ IMAGE_STREAM_NAMESPACE }} -f https://raw.githubusercontent.com/jboss-openshift/application-templates/master/openjdk/openjdk18-image-stream.json"
    when: java_imagestream_result is failed
    tags: jdk

  # install RHPAM Image Streams
  - name: Check if PAM ImageStreams exists
    shell: oc get is/rhpam73-businesscentral-openshift -n {{ IMAGE_STREAM_NAMESPACE }}
    register: rhpam_is_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import the RHPAM ImageStreams into the cluster.
    shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhpam-7-openshift-image/7.5.0.GA/rhpam75-image-streams.yaml -n {{ IMAGE_STREAM_NAMESPACE }}"
    when: rhpam_is_exists_result is failed
    ignore_errors: true
    tags: rhpam

  - name: Check if RHPAM Authoring Template exists
    shell: oc get template/rhpam73-authoring -n {{ IMAGE_STREAM_NAMESPACE}}
    register: rhpam_template_authoring_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import the RHPAM Authoring Template into the cluster.
    shell: "oc create -f https://raw.githubusercontent.com/jboss-container-images/rhpam-7-openshift-image/7.3.0.GA/templates/rhpam73-authoring.yaml -n {{ IMAGE_STREAM_NAMESPACE }}"
    when: rhpam_template_authoring_exists_result is failed
    ignore_errors: true
    tags: rhpam

# Only checking one of the ImageStreams that's in the Entando ImageStream file.
  - name: Check if Entando CC Dispute ImageStreams exists
    shell: oc get is/fsi-cc-dispute-customer -n {{ IMAGE_STREAM_NAMESPACE}}
    register: cc_disute_is_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import Entando OpenShift ImageStreams Entando EAP 7.1
    shell: "oc create -f https://raw.githubusercontent.com/entando/entando-ops/credit-card-dispute/Openshift/image-streams/entando-fsi-ccd-demo.json -n {{ IMAGE_STREAM_NAMESPACE }}"
    when: cc_disute_is_exists_result is failed


  - name: Check if Entando CC Dispute ImageStreams exists
    shell: oc get template/entando-demo -n {{ IMAGE_STREAM_NAMESPACE}}
    register: entando_demo_template_exists_result
    ignore_errors: true
    tags: rhpam

  - name: Import Entando demo template
    shell: "oc create -f https://raw.githubusercontent.com/entando/entando-ops/credit-card-dispute/Openshift/templates/entando-demo.yml -n {{IMAGE_STREAM_NAMESPACE}}"
    when: entando_demo_template_exists_result is failed

#---------------------- Deploy RHPAM ----------------------

  - include_role:
      name: ansible_openshift_rhpam
    vars:
      OCP_PROJECT: "{{ namespace }}"
      IMAGE_STREAM_NAMESPACE: "{{ IMAGE_STREAM_NAMESPACE }}"
      RHPAM_VERSION_TAG: 7.5.x
      RHPAM_VERSION_ID: 75
      #RHPAM_VERSION_TAG: 7.3.1.GA
#    with_sequence: start=1 end={{user_count}}


#---------------------- Patch Deployment Configs to use DMN-PMML versions of BC and KIE-Server ----------------------

# Disable temporarily until we have a proper patched container image defined for 7.5

  - include_role:
      name: rhpam_openshift_dmn_pmml
    vars:
      OCP_PROJECT: "{{ namespace }}"


#---------------------- Configure KIE-Server Prometheus plugin ----------------------

  - name: "Configure KIE-Server Prometheus plugin environment variables."
    shell: "oc set env dc/rhpam7-kieserver JAVA_OPTS_APPEND=\"-Dorg.kie.prometheus.server.ext.disabled=false -Dorg.kie.prometheus.server.ext.metrics=org.kie.server.services.prometheus.PrometheusMetricsDMNListener\" -n {{ namespace }}"


#---------------------- Deploy Entando ----------------------

  - name: "Get KIE-Server Route"
    shell: "oc get route rhpam7-kieserver | awk 'FNR > 1 {print $2}'"
    register: oc_get_route_output

  - name: "Set KIE Server Route fact"
    set_fact:
      kie_server_route: "{{ oc_get_route_output.stdout }}"

  - name: "Get OCP Domain Suffix"
    shell: "oc get route rhpam7-kieserver | awk 'FNR > 1 {print $2}'| cut -d\".\" -f2-"
    register: oc_get_domain_suffix_output

  - name: "OCP Domain Suffix fact"
    set_fact:
      ocp_domain_suffix: "{{ oc_get_domain_suffix_output.stdout }}"

  - name: "Create Entando Customer Application"
    shell: |
           oc new-app --template={{ IMAGE_STREAM_NAMESPACE }}/entando-demo \
             -p APPLICATION_NAME="entando-fsi-ccd-customer" \
             -p KIE_SERVER_BASE_URL="http://{{kie_server_route}}" \
             -p KIE_SERVER_USERNAME=pamAdmin \
             -p KIE_SERVER_PASSWORD=redhatpam1! \
             -p IMAGE_STREAM_NAMESPACE={{ IMAGE_STREAM_NAMESPACE }} \
             -p IMAGE_STREAM="fsi-cc-dispute-customer" \
             -p ENTANDO_APP_BUILDER_HOSTNAME_HTTP="appbuilder-customer.{{ocp_domain_suffix}}" \
             -p ENTANDO_RUNTIME_HOSTNAME_HTTP="entando-core.{{ocp_domain_suffix}}" \
             -p ENTANDO_WEB_CONTEXT="fsi-credit-card-dispute-customer"

  - name: "Create Entando Admin Application"
    shell: |
           oc new-app --template={{ IMAGE_STREAM_NAMESPACE }}/entando-demo \
             -p APPLICATION_NAME="entando-fsi-ccd-admin" \
             -p KIE_SERVER_BASE_URL="http://{{kie_server_route}}" \
             -p KIE_SERVER_USERNAME=pamAdmin \
             -p KIE_SERVER_PASSWORD=redhatpam1! \
             -p IMAGE_STREAM_NAMESPACE={{ IMAGE_STREAM_NAMESPACE }} \
             -p IMAGE_STREAM="fsi-cc-dispute-admin" \
             -p ENTANDO_APP_BUILDER_HOSTNAME_HTTP="appbuilder-admin.{{ocp_domain_suffix}}" \
             -p ENTANDO_RUNTIME_HOSTNAME_HTTP="entando-core.{{ocp_domain_suffix}}" \
             -p ENTANDO_WEB_CONTEXT="fsi-credit-card-dispute-backoffice"


#---------------------- Deploy Prometheus ----------------------

  - include_role:
      name: prometheus
    vars:
      OCP_PROJECT: "{{ namespace }}"

#---------------------- Deploy Grafana ----------------------

  - include_role:
      name: grafana
    vars:
      OCP_PROJECT: "{{ namespace }}"

#---------------------- Deploy DataLoader ----------------------

  - name: Create DataLoader Build
    shell: oc new-build fabric8/s2i-java~https://github.com/jbossdemocentral/gdemo-data-loader-quarkus --name=gdemo-data-loader

  - name: Deploy DataLoader for DMN
    shell: oc new-app gdemo-data-loader --allow-missing-imagestream-tags --name gdemo-data-loader-dmn -e KIE_SERVER_REST_ENDPOINT=http://rhpam7-kieserver:8080/services/rest/server  -e DMN_MODEL_NAME=creditDisputeSimpleInput

  - name: Deploy DataLoader for PMML-1
    shell: oc new-app gdemo-data-loader --allow-missing-imagestream-tags --name gdemo-data-loader-dmn-pmml1 -e KIE_SERVER_REST_ENDPOINT=http://rhpam7-kieserver:8080/services/rest/server  -e DMN_MODEL_NAME=creditDisputeSimpleInputPmml1

  - name: Deploy DataLoader for PMML2
    shell: oc new-app gdemo-data-loader --allow-missing-imagestream-tags --name gdemo-data-loader-dmn-pmml2 -e KIE_SERVER_REST_ENDPOINT=http://rhpam7-kieserver:8080/services/rest/server  -e DMN_MODEL_NAME=creditDisputeSimpleInputPmml2

  - name: Set RepController for DMN DC
    shell: oc scale --replicas=0 dc/gdemo-data-loader-dmn

  - name: Set RepContoller for PMML1 DC
    shell: oc scale --replicas=0 dc/gdemo-data-loader-dmn-pmml1

  - name: Set RepController for PMML2 DC
    shell: oc scale --replicas=0 dc/gdemo-data-loader-dmn-pmml2
